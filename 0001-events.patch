From e6b24680d6573c41858f464724039b03582a1d6d Mon Sep 17 00:00:00 2001
From: Mohit Maulekhi <mohitmaulekhi312@gmail.com>
Date: Mon, 29 Sep 2025 00:40:26 +0530
Subject: [PATCH] events

---
 app/student/events/page.tsx      | 324 +++++++++++++++++++------------
 app/university/events/page.tsx   | 224 +++++++++------------
 components/CreateEventForm.tsx   |  63 ++++++
 components/EventCard.tsx         |  39 ++++
 components/EventDetailsModal.tsx | 101 ++++++++++
 lib/event.ts                     |  53 +++++
 lib/student.ts                   |  19 --
 package.json                     |   2 +
 pnpm-lock.yaml                   |  79 ++++++++
 types/events.ts                  | 105 ++++------
 10 files changed, 661 insertions(+), 348 deletions(-)
 create mode 100644 components/CreateEventForm.tsx
 create mode 100644 components/EventCard.tsx
 create mode 100644 components/EventDetailsModal.tsx
 create mode 100644 lib/event.ts
 delete mode 100644 lib/student.ts

diff --git a/app/student/events/page.tsx b/app/student/events/page.tsx
index 3198a8d..27cb01c 100644
--- a/app/student/events/page.tsx
+++ b/app/student/events/page.tsx
@@ -1,60 +1,18 @@
-import React from "react";
+"use client";
+import React, { useState, useEffect } from "react";
 import { Button } from "@/components/ui/button";
 import { Calendar, MapPin, BookmarkPlus, ArrowLeft, Users } from "lucide-react";
 import Link from "next/link";
-
-interface Event {
-  id: number;
-  title: string;
-  date: string;
-  location: string;
-  description: string;
-  category: string;
-  attendees: number;
-}
-
-const events: Event[] = [
-  {
-    id: 1,
-    title: "Orientation Day",
-    date: "2025-09-01",
-    location: "Main Auditorium",
-    description:
-      "Welcome event for new students with campus tour, department introductions, and clubs fair.",
-    category: "Academic",
-    attendees: 250,
-  },
-  {
-    id: 2,
-    title: "Tech Fest 2025",
-    date: "2025-10-15",
-    location: "Innovation Block",
-    description:
-      "Annual technology festival with workshops, hackathons, guest speakers and demo booths.",
-    category: "Technology",
-    attendees: 500,
-  },
-  {
-    id: 3,
-    title: "Sports Meet",
-    date: "2025-11-20",
-    location: "Sports Ground",
-    description:
-      "Inter-department sports competition with athletics, team games and prize distribution.",
-    category: "Sports",
-    attendees: 300,
-  },
-  {
-    id: 4,
-    title: "Cultural Festival",
-    date: "2025-12-05",
-    location: "Cultural Center",
-    description:
-      "Annual cultural celebration featuring music, dance, drama performances and art exhibitions.",
-    category: "Cultural",
-    attendees: 400,
-  },
-];
+import { registerForEvent, AttendaceForEvent, fetchEvents } from "@/lib/event";
+import { useAuth } from "@/contexts/AuthContext";
+import {
+  Dialog,
+  DialogContent,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+import { toast } from "sonner";
+import { QrReader } from "react-qr-reader";
 
 const formatDate = (dateString: string) => {
   const date = new Date(dateString);
@@ -81,7 +39,66 @@ const getCategoryColor = (category: string) => {
   }
 };
 
-const StudentEventsPage: React.FC = () => {
+const StudentEventsPage = () => {
+  const [events, setEvents] = useState<any[]>([]);
+  const [loading, setLoading] = useState(true);
+  const [error, setError] = useState<string | null>(null);
+  const { user, token } = useAuth();
+  const [registering, setRegistering] = useState<string | null>(null);
+  const [attendanceLoading, setAttendanceLoading] = useState(false);
+  const [showQrModal, setShowQrModal] = useState(false);
+  const [qrError, setQrError] = useState<string | null>(null);
+
+  useEffect(() => {
+    if (!token) return;
+    setLoading(true);
+    setError(null);
+    fetchEvents(token)
+      .then((data) => setEvents(data))
+      .catch(() => setError("Failed to load events"))
+      .finally(() => setLoading(false));
+  }, [token]);
+
+  const handleRegister = async (eventId: string) => {
+    if (!token) return;
+    const event = events.find((e) => e.id === eventId);
+    if (isRegistered(event)) {
+      toast.warning("You are already registered for this event.");
+      return;
+    }
+    setRegistering(eventId);
+    const success = await registerForEvent(token, eventId);
+    setRegistering(null);
+    if (success) {
+      toast.success("Registered for event successfully!");
+    } else {
+      toast.error("Failed to register for event");
+    }
+  };
+
+  const handleAttendance = () => {
+    setShowQrModal(true);
+    setQrError(null);
+  };
+
+  const handleScan = async (scannedId: string | null) => {
+    if (!scannedId) return;
+    setAttendanceLoading(true);
+    setQrError(null);
+    const success = await AttendaceForEvent(token!, scannedId);
+    setAttendanceLoading(false);
+    setShowQrModal(false);
+    if (success) {
+      toast.success("Attendance marked successfully!");
+    } else {
+      toast.error("Failed to mark attendance");
+    }
+  };
+
+  const isRegistered = (event: any) => {
+    return event.Registered?.some((u: any) => u.id === user?.id);
+  };
+
   return (
     <div className="min-h-screen bg-[#000000] font-poppins">
       <div className="mx-auto px-6 py-8">
@@ -107,86 +124,143 @@ const StudentEventsPage: React.FC = () => {
 
         {/* Events Grid */}
         <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-2">
-          {events.map((event) => (
-            <article
-              key={event.id}
-              className="bg-black/70 backdrop-blur-md border border-gray-700 rounded-3xl p-8 shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105"
-            >
-              {/* Event Header */}
-              <div className="flex items-start justify-between mb-4">
-                <div className="flex-1">
-                  <h2 className="text-xl font-bold text-white mb-2">
-                    {event.title}
-                  </h2>
-                  <div className="flex items-center text-gray-400 text-sm mb-1">
-                    <MapPin className="h-4 w-4 mr-2" />
-                    {event.location}
+          {loading ? (
+            <div className="col-span-full text-center py-16">
+              <span className="text-gray-400">Loading events...</span>
+            </div>
+          ) : error ? (
+            <div className="col-span-full text-center py-16">
+              <span className="text-red-400">{error}</span>
+            </div>
+          ) : events.length === 0 ? (
+            <div className="col-span-full text-center py-16">
+              <span className="text-gray-400">No events found.</span>
+            </div>
+          ) : (
+            events.map((event) => (
+              <article
+                key={event.id}
+                className="bg-black/70 backdrop-blur-md border border-gray-700 rounded-3xl p-8 shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105"
+              >
+                {/* Event Header */}
+                <div className="flex items-start justify-between mb-4">
+                  <div className="flex-1">
+                    <h2 className="text-xl font-bold text-white mb-2">
+                      {event.Title}
+                    </h2>
+                    <div className="flex items-center text-gray-400 text-sm mb-1">
+                      <MapPin className="h-4 w-4 mr-2" />
+                      {event.Venue}
+                    </div>
+                    <div className="flex items-center text-gray-400 text-sm">
+                      <Calendar className="h-4 w-4 mr-2" />
+                      {event.DateTime}
+                    </div>
+                  </div>
+                  <div className="text-right">
+                    <span
+                      className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getCategoryColor(
+                        event.Type
+                      )}`}
+                    >
+                      {event.Type}
+                    </span>
                   </div>
+                </div>
+
+                {/* Event Description */}
+                <p className="text-gray-300 text-sm leading-relaxed mb-6">
+                  {event.Description}
+                </p>
+
+                {/* Event Stats */}
+                <div className="flex items-center justify-between mb-6">
                   <div className="flex items-center text-gray-400 text-sm">
-                    <Calendar className="h-4 w-4 mr-2" />
-                    {formatDate(event.date)}
+                    <Users className="h-4 w-4 mr-2" />
+                    {event.Registered?.length ?? 0} registered
                   </div>
                 </div>
-                <div className="text-right">
-                  <span
-                    className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${getCategoryColor(
-                      event.category
-                    )}`}
+
+                {/* Action Buttons */}
+                <div className="flex items-center gap-3">
+                  <Button variant="outline" size="sm" className="flex-1">
+                    View Details
+                  </Button>
+                  <Button
+                    size="sm"
+                    className="flex-1 bg-gradient-to-r from-blue-600 via-indigo-500 to-purple-500 hover:from-blue-700 hover:via-indigo-600 hover:to-purple-600"
+                    onClick={() => handleRegister(event.id)}
+                    disabled={registering === event.id || isRegistered(event)}
                   >
-                    {event.category}
-                  </span>
-                </div>
-              </div>
-
-              {/* Event Description */}
-              <p className="text-gray-300 text-sm leading-relaxed mb-6">
-                {event.description}
-              </p>
-
-              {/* Event Stats */}
-              <div className="flex items-center justify-between mb-6">
-                <div className="flex items-center text-gray-400 text-sm">
-                  <Users className="h-4 w-4 mr-2" />
-                  {event.attendees} expected
+                    {registering === event.id ? (
+                      <span className="flex items-center justify-center">
+                        <span className="h-4 w-4 border-2 border-white/30 border-t-white rounded-full animate-spin mr-2" />
+                        Registering...
+                      </span>
+                    ) : isRegistered(event) ? (
+                      <span className="flex items-center justify-center text-red-400">
+                        Already Registered
+                      </span>
+                    ) : (
+                      <>
+                        <BookmarkPlus className="w-4 h-4 mr-2" />
+                        Register
+                      </>
+                    )}
+                  </Button>
+                  <Button
+                    size="sm"
+                    className="flex-1 bg-gradient-to-r from-green-600 via-teal-500 to-blue-500 hover:from-green-700 hover:via-teal-600 hover:to-blue-600"
+                    onClick={handleAttendance}
+                  >
+                    Mark Attendance
+                  </Button>
                 </div>
-              </div>
-
-              {/* Action Buttons */}
-              <div className="flex items-center gap-3">
-                <Button variant="outline" size="sm" className="flex-1">
-                  View Details
-                </Button>
-                <Button
-                  size="sm"
-                  className="flex-1 bg-gradient-to-r from-blue-600 via-indigo-500 to-purple-500 hover:from-blue-700 hover:via-indigo-600 hover:to-purple-600"
-                >
-                  <BookmarkPlus className="w-4 h-4 mr-2" />
-                  Register
-                </Button>
-              </div>
-            </article>
-          ))}
+              </article>
+            ))
+          )}
         </div>
 
         {/* Call to Action */}
-        <div className="mt-16 text-center">
-          <div className="bg-black/70 backdrop-blur-md border border-gray-700 rounded-3xl p-8 shadow-xl max-w-2xl mx-auto">
-            <h3 className="text-2xl font-bold text-white mb-4">
-              Don't Miss Out!
-            </h3>
-            <p className="text-gray-300 mb-6">
-              Stay updated with campus events and never miss an opportunity to
-              engage with your community.
-            </p>
-            <Button
-              size="lg"
-              className="bg-gradient-to-r from-blue-600 via-indigo-500 to-purple-500 hover:from-blue-700 hover:via-indigo-600 hover:to-purple-600"
-            >
-              View All Events
-            </Button>
-          </div>
-        </div>
       </div>
+
+      {/* QR Scanner Modal */}
+      <Dialog open={showQrModal} onOpenChange={setShowQrModal}>
+        <DialogContent className="max-w-md">
+          <DialogHeader>
+            <DialogTitle>Scan Event QR Code</DialogTitle>
+          </DialogHeader>
+          <div className="flex flex-col items-center gap-4">
+            {attendanceLoading ? (
+              <span className="flex items-center justify-center">
+                <span className="h-6 w-6 border-2 border-white/30 border-t-white rounded-full animate-spin mr-2" />
+                Marking attendance...
+              </span>
+            ) : (
+              <>
+                <div style={{ width: "100%" }}>
+                  <QrReader
+                    constraints={{ facingMode: "environment" }}
+                    onResult={(result: any, error: any) => {
+                      if (!!result) {
+                        handleScan(result.getText());
+                      } else if (error) {
+                        setQrError("QR scan failed. Try again.");
+                      }
+                    }}
+                  />
+                </div>
+                {qrError && (
+                  <span className="text-red-400 text-sm">{qrError}</span>
+                )}
+                <span className="text-xs text-gray-400">
+                  Align the QR code within the frame
+                </span>
+              </>
+            )}
+          </div>
+        </DialogContent>
+      </Dialog>
     </div>
   );
 };
diff --git a/app/university/events/page.tsx b/app/university/events/page.tsx
index 0765807..c30b36f 100644
--- a/app/university/events/page.tsx
+++ b/app/university/events/page.tsx
@@ -1,147 +1,101 @@
 "use client";
-
-import React from "react";
+import React, { useEffect, useState } from "react";
+import { Event, EventDetails } from "@/types/events";
+import { fetchEvents } from "@/lib/event";
+import { EventCard } from "@/components/EventCard";
+import { EventDetailsModal } from "@/components/EventDetailsModal";
+import { CreateEventForm } from "@/components/CreateEventForm";
 import { Button } from "@/components/ui/button";
-import { Calendar, MapPin, Users, ArrowLeft } from "lucide-react";
-import Link from "next/link";
-
-const events = [
-  {
-    id: 1,
-    title: "Campus Research Expo",
-    date: "2025-09-22",
-    location: "Exhibition Hall",
-    excerpt:
-      "Showcase of student and faculty research projects with poster sessions and demos.",
-    category: "Research",
-    attendees: 150,
-  },
-  {
-    id: 2,
-    title: "Alumni Meet",
-    date: "2025-10-05",
-    location: "Auditorium",
-    excerpt:
-      "Reconnect with alumni, talks on career growth, and networking sessions.",
-    category: "Networking",
-    attendees: 200,
-  },
-  {
-    id: 3,
-    title: "Green Campus Drive",
-    date: "2025-11-12",
-    location: "Campus Grounds",
-    excerpt:
-      "Campus-wide tree planting, clean-up drives, and sustainability workshops.",
-    category: "Environment",
-    attendees: 300,
-  },
-];
+import { Plus, ArrowLeft } from "lucide-react";
+import { useAuth } from "@/contexts/AuthContext";
 
-export default function UniversityEventsPage() {
-  return (
-    <div className="min-h-screen bg-[#000000] font-poppins">
-      <div className=" mx-auto px-6 py-8">
-        {/* Header */}
-        <div className="mb-8">
-          <Link
-            href="/university"
-            className="inline-flex items-center text-sm text-gray-400 hover:text-blue-400 mb-4 transition-colors"
-          >
-            <ArrowLeft className="h-4 w-4 mr-2" />
-            Back to Dashboard
-          </Link>
-          <div className="text-center">
-            <h1 className="text-4xl md:text-5xl font-bold bg-gradient-to-r from-[#E5E5E5] to-[#60A5FA] bg-clip-text text-transparent mb-4">
-              University Events
-            </h1>
-            <p className="text-xl text-gray-300 max-w-2xl mx-auto">
-              Campus-wide events, notices and community activities
-            </p>
-          </div>
-        </div>
-
-        {/* Events Grid */}
-        <div className="grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
-          {events.map((event) => (
-            <article
-              key={event.id}
-              className="bg-black/70 backdrop-blur-md border border-gray-700 rounded-3xl p-8 shadow-xl hover:shadow-2xl transition-all duration-300 hover:scale-105"
-            >
-              {/* Event Header */}
-              <div className="flex items-start justify-between mb-4">
-                <div className="flex-1">
-                  <h2 className="text-xl font-bold text-white mb-2">
-                    {event.title}
-                  </h2>
-                  <div className="flex items-center text-gray-400 text-sm mb-1">
-                    <MapPin className="h-4 w-4 mr-2" />
-                    {event.location}
-                  </div>
-                  <div className="flex items-center text-gray-400 text-sm">
-                    <Calendar className="h-4 w-4 mr-2" />
-                    {new Date(event.date).toLocaleDateString("en-US", {
-                      weekday: "short",
-                      year: "numeric",
-                      month: "short",
-                      day: "numeric",
-                    })}
-                  </div>
-                </div>
-                <div className="text-right">
-                  <span className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-500/20 text-blue-400 border border-blue-500/30">
-                    {event.category}
-                  </span>
-                </div>
-              </div>
+const UniversityEventsPage: React.FC = () => {
+  const [events, setEvents] = useState<Event[]>([]);
+  const [selectedEvent, setSelectedEvent] = useState<EventDetails | null>(null);
+  const [showCreateForm, setShowCreateForm] = useState(false);
+  const [refreshKey, setRefreshKey] = useState(0);
+  const {user,token} = useAuth();
+  const [loading, setLoading] = useState(true);
+  useEffect(() => {
+    if (user) {
+      fetchEvents(token!).then((data) => {
+        setEvents(data);
+        setLoading(false);
+      });
+    }
+  }, [refreshKey]);
 
-              {/* Event Description */}
-              <p className="text-gray-300 text-sm leading-relaxed mb-6">
-                {event.excerpt}
-              </p>
+  const handleEventClick = (event: Event) => {
+    setSelectedEvent(event);
+  };
 
-              {/* Event Stats */}
-              <div className="flex items-center justify-between mb-6">
-                <div className="flex items-center text-gray-400 text-sm">
-                  <Users className="h-4 w-4 mr-2" />
-                  {event.attendees} expected
-                </div>
-              </div>
+  const handleCloseModal = () => {
+    setSelectedEvent(null);
+  };
 
-              {/* Action Buttons */}
-              <div className="flex items-center gap-3">
-                <Button variant="outline" size="sm" className="flex-1">
-                  View Details
-                </Button>
-                <Button
-                  size="sm"
-                  className="flex-1 bg-gradient-to-r from-blue-600 via-indigo-500 to-purple-500 hover:from-blue-700 hover:via-indigo-600 hover:to-purple-600"
-                >
-                  Manage
-                </Button>
-              </div>
-            </article>
-          ))}
+  const handleEventCreated = () => {
+    setShowCreateForm(false);
+    setRefreshKey((prev) => prev + 1);
+  };
+  if (loading) {
+    return (
+      <div className="min-h-screen bg-black text-white p-6 flex items-center justify-center">
+        <div className="text-center">
+          <div className="loader mb-4"></div>
+          <p className="text-gray-400">Loading events...</p>
         </div>
+      </div>
+    );
+  }
+
+  return (
+    <div className="min-h-screen bg-black text-white p-6">
 
-        {/* Call to Action */}
-        <div className="mt-16 text-center">
-          <div className="bg-black/70 backdrop-blur-md border border-gray-700 rounded-3xl p-8 shadow-xl max-w-2xl mx-auto">
-            <h3 className="text-2xl font-bold text-white mb-4">
-              Create New Event
-            </h3>
-            <p className="text-gray-300 mb-6">
-              Organize campus events and engage with your university community.
-            </p>
-            <Button
-              size="lg"
-              className="bg-gradient-to-r from-blue-600 via-indigo-500 to-purple-500 hover:from-blue-700 hover:via-indigo-600 hover:to-purple-600"
-            >
-              Create Event
-            </Button>
+      <div className="flex items-center justify-between mb-6">
+        <h1 className="text-2xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent">
+          University Events
+        </h1>
+        <Button
+          onClick={() => setShowCreateForm(!showCreateForm)}
+          className="bg-gradient-to-r from-blue-600 to-purple-600"
+        >
+          <Plus className="h-4 w-4 mr-2" />
+          {showCreateForm ? "Cancel" : "Create Event"}
+        </Button>
+      </div>
+      {showCreateForm && <CreateEventForm onEventCreated={handleEventCreated} />}
+      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-6">
+        {events.length === 0 ? (
+          <div className="col-span-full text-center py-16">
+            <div className="bg-black/50 rounded-lg p-8 border border-gray-700 inline-block">
+              <h3 className="text-lg font-semibold text-white mb-2">No Events Found</h3>
+              <p className="text-gray-400 mb-2">There are currently no events scheduled for your university.</p>
+              <p className="text-gray-500 text-sm">Click "Create Event" to add a new event.</p>
+            </div>
           </div>
-        </div>
+        ) : (
+          events.map((event) => (
+            <EventCard
+              key={event.id}
+              event={{
+                id: event.id,
+                Title: event.Title,
+                Type: event.Type,
+                DateTime: event.DateTime,
+                Venue: event.Venue,
+              }}
+              onClick={() => handleEventClick(event)}
+            />
+          ))
+        )}
       </div>
+      <EventDetailsModal
+        event={selectedEvent}
+        open={!!selectedEvent}
+        onClose={handleCloseModal}
+      />
     </div>
   );
-}
+};
+
+export default UniversityEventsPage;
diff --git a/components/CreateEventForm.tsx b/components/CreateEventForm.tsx
new file mode 100644
index 0000000..d1b6714
--- /dev/null
+++ b/components/CreateEventForm.tsx
@@ -0,0 +1,63 @@
+import React, { useState } from "react";
+import { CreateEventRequest } from "@/types/events";
+import { Button } from "@/components/ui/button";
+import { Input } from "@/components/ui/input";
+import { Textarea } from "@/components/ui/textarea";
+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
+import { createEvent } from "@/lib/event";
+import { useAuth } from "@/contexts/AuthContext";
+
+const EVENT_TYPES = ["Hackathon", "Cultural", "Workshops", "Coding", "Other"];
+
+interface CreateEventFormProps {
+  onEventCreated?: () => void;
+}
+
+export const CreateEventForm: React.FC<CreateEventFormProps> = ({ onEventCreated }) => {
+  const { token } = useAuth();
+  const [form, setForm] = useState<CreateEventRequest>({
+    Title: "",
+    Description: "",
+    Type: EVENT_TYPES[0],
+    DateTime: "",
+    Venue: "",
+  });
+  const [loading, setLoading] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleChange = (field: keyof CreateEventRequest, value: string) => {
+    setForm(prev => ({ ...prev, [field]: value }));
+  };
+
+  const handleSubmit = async (e: React.FormEvent) => {
+    e.preventDefault();
+    setLoading(true);
+    setError(null);
+    try {
+      await createEvent(token!, form);
+      setForm({ Title: "", Description: "", Type: EVENT_TYPES[0], DateTime: "", Venue: "" });
+      if (onEventCreated) onEventCreated();
+    } catch (err) {
+      setError("Failed to create event");
+    } finally {
+      setLoading(false);
+    }
+  };
+
+  return (
+    <form onSubmit={handleSubmit} className="space-y-4 p-4 bg-black/50 rounded-lg border border-gray-700">
+      <Input placeholder="Title" value={form.Title} onChange={e => handleChange("Title", e.target.value)} required />
+      <Textarea placeholder="Description" value={form.Description} onChange={e => handleChange("Description", e.target.value)} required />
+      <Select value={form.Type} onValueChange={val => handleChange("Type", val)}>
+        <SelectTrigger><SelectValue placeholder="Type" /></SelectTrigger>
+        <SelectContent>
+          {EVENT_TYPES.map(type => <SelectItem key={type} value={type}>{type}</SelectItem>)}
+        </SelectContent>
+      </Select>
+      <Input type="datetime-local" value={form.DateTime} onChange={e => handleChange("DateTime", e.target.value)} required />
+      <Input placeholder="Venue" value={form.Venue} onChange={e => handleChange("Venue", e.target.value)} />
+      {error && <div className="text-red-500 text-sm">{error}</div>}
+      <Button type="submit" disabled={loading}>{loading ? "Creating..." : "Create Event"}</Button>
+    </form>
+  );
+};
diff --git a/components/EventCard.tsx b/components/EventCard.tsx
new file mode 100644
index 0000000..31156f7
--- /dev/null
+++ b/components/EventCard.tsx
@@ -0,0 +1,39 @@
+import React from "react";
+import { EventCardData } from "@/types/events";
+import { Card, CardContent } from "@/components/ui/card";
+import { CalendarDays, MapPin } from "lucide-react";
+
+interface EventCardProps {
+  event: EventCardData;
+  onClick: () => void;
+}
+
+export const EventCard: React.FC<EventCardProps> = ({ event, onClick }) => (
+  <Card
+    className="cursor-pointer hover:shadow-xl transition border border-blue-700/30 bg-gradient-to-br from-black via-blue-950 to-black rounded-xl"
+    onClick={onClick}
+  >
+    <CardContent className="p-5 flex flex-col gap-3">
+      <div className="flex justify-between items-center mb-2">
+        <h3 className="font-bold text-xl text-blue-400 truncate max-w-[70%]">{event.Title}</h3>
+        <span className="text-xs px-2 py-1 rounded bg-blue-700/20 text-blue-300 font-semibold">
+          {event.Type}
+        </span>
+      </div>
+      <div className="flex items-center gap-2 text-sm text-gray-300">
+        <CalendarDays className="h-4 w-4 text-blue-400" />
+        <span>{new Date(event.DateTime).toLocaleString()}</span>
+      </div>
+      {event.Venue && (
+        <div className="flex items-center gap-2 text-xs text-gray-400">
+          <MapPin className="h-4 w-4 text-purple-400" />
+          <span>Venue: {event.Venue}</span>
+        </div>
+      )}
+      {/* Add a subtle divider and a details button */}
+      <div className="flex justify-end mt-2">
+        <span className="text-xs text-blue-400 hover:underline">View Details</span>
+      </div>
+    </CardContent>
+  </Card>
+);
diff --git a/components/EventDetailsModal.tsx b/components/EventDetailsModal.tsx
new file mode 100644
index 0000000..9e5ea27
--- /dev/null
+++ b/components/EventDetailsModal.tsx
@@ -0,0 +1,101 @@
+import React from "react";
+import { EventDetails } from "@/types/events";
+import {
+  Dialog,
+  DialogContent,
+  DialogHeader,
+  DialogTitle,
+} from "@/components/ui/dialog";
+import { QRCodeSVG } from "qrcode.react";
+
+interface QRCodeProps {
+  uid: string;
+}
+
+interface EventDetailsModalProps {
+  event: EventDetails | null;
+  open: boolean;
+  onClose: () => void;
+}
+
+export const EventDetailsModal: React.FC<EventDetailsModalProps> = ({
+  event,
+  open,
+  onClose,
+}) => {
+  if (!event) return null;
+  return (
+    <Dialog open={open} onOpenChange={onClose} >
+      <DialogContent className=" bg-black/90 border border-gray-700 rounded-xl shadow-xl">
+        <DialogHeader>
+          <DialogTitle className="text-3xl font-bold text-blue-400 mb-2">
+            {event.Title}
+          </DialogTitle>
+        </DialogHeader>
+        <div className="flex flex-col md:flex-row gap-10">
+          <div className="flex-1 space-y-4">
+            <div className="flex gap-2 items-center">
+              <span className="text-xs px-2 py-1 rounded bg-blue-700/20 text-blue-300 font-semibold">
+                {event.Type}
+              </span>
+              <span className="text-xs px-2 py-1 rounded bg-gray-700/30 text-gray-300">
+                {new Date(event.DateTime).toLocaleString()}
+              </span>
+              {event.Venue && (
+                <span className="text-xs px-2 py-1 rounded bg-purple-700/20 text-purple-300">
+                  {event.Venue}
+                </span>
+              )}
+            </div>
+            <div className="text-sm text-gray-300">
+              <strong>Description:</strong>
+              <span className="ml-2 text-gray-400">{event.Description}</span>
+            </div>
+            <div className="flex gap-6 mt-2">
+              <div className="bg-blue-900/30 rounded-lg px-4 py-3">
+                <span className="block text-xs text-blue-400 font-semibold">
+                  Registered
+                </span>
+                <span className="block text-xl font-bold">
+                  {event.Registered?.length ?? 0}
+                </span>
+              </div>
+              <div className="bg-green-900/30 rounded-lg px-4 py-3">
+                <span className="block text-xs text-green-400 font-semibold">
+                  Attended
+                </span>
+                <span className="block text-xl font-bold">
+                  {event.Attendees?.length ?? 0}
+                </span>
+              </div>
+              <div className="bg-yellow-900/30 rounded-lg px-4 py-3">
+                <span className="block text-xs text-yellow-400 font-semibold">
+                  Winners
+                </span>
+                <span className="block text-xl font-bold">
+                  {event.Winners?.map((w) => w.studentId).join(", ") || "None"}
+                </span>
+              </div>
+            </div>
+          </div>
+          <div className="flex flex-col items-center justify-center gap-2 w-full md:w-auto">
+            <span className="text-xs text-gray-400 mb-2">Event QR Code</span>
+            <div className="bg-white p-2 md:p-4 rounded-lg shadow w-full flex justify-center">
+              <QRCodeSVG
+                value={event.id}
+                size={Math.min(
+                  window.innerWidth > 768 ? 200 : 120,
+                  200
+                )}
+                style={{ maxWidth: "100%", height: "auto" }}
+              />
+            </div>
+            <span className="text-xs text-gray-500 mt-2">
+              Scan to check-in or view event
+            </span>
+          </div>
+        </div>
+      </DialogContent>
+    </Dialog>
+  );
+};
diff --git a/lib/event.ts b/lib/event.ts
new file mode 100644
index 0000000..c60a927
--- /dev/null
+++ b/lib/event.ts
@@ -0,0 +1,53 @@
+// Student data functions using axios
+import axios from 'axios'
+
+const API_URL = process.env.NEXT_PUBLIC_STRAPI_URL || 'http://localhost:1337'
+
+/// events functions
+export async function registerForEvent(token: string, eventId: string): Promise<boolean> {
+  try {
+    await axios.post(`${API_URL}/api/events/${eventId}/register`, {}, {
+      headers: { Authorization: `Bearer ${token}` },
+    })
+    return true
+  } catch (error) {
+    console.error('Failed to register for event:', error)
+    return false
+  }
+}
+
+export async function AttendaceForEvent(token: string, eventId: string): Promise<boolean> {
+  try {
+    await axios.post(`${API_URL}/api/events/${eventId}/attendance`, {}, {
+      headers: { Authorization: `Bearer ${token}` },
+    })
+    return true
+  } catch (error) {
+    console.error('Failed to mark attendance for event:', error)
+    return false
+  }
+}
+
+export async function fetchEvents(token: string): Promise<any[]> {
+  try {
+    const response = await axios.get(`${API_URL}/api/events`, {
+      headers: { Authorization: `Bearer ${token}` },
+    })
+    return response.data.data
+  } catch (error) {
+    console.error('Failed to fetch events:', error)
+    return []
+  }
+}
+
+export async function createEvent(token: string, eventData: any): Promise<any | null> {
+  try {
+    const response = await axios.post(`${API_URL}/api/events`, { data: eventData }, {
+      headers: { Authorization: `Bearer ${token}` },
+    })
+    return response.data
+  } catch (error) {
+    console.error('Failed to create event:', error)
+    return null
+  }
+}
\ No newline at end of file
diff --git a/lib/student.ts b/lib/student.ts
deleted file mode 100644
index 7af8d90..0000000
--- a/lib/student.ts
+++ /dev/null
@@ -1,19 +0,0 @@
-// Student data functions using axios
-import axios from 'axios'
-
-const API_URL = process.env.NEXT_PUBLIC_STRAPI_URL || 'http://localhost:1337'
-
-/// events functions
-export async function registerForEvent(token: string, eventId: string): Promise<boolean> {
-  try {
-    await axios.post(`${API_URL}/api/events/${eventId}/register`, {}, {
-      headers: { Authorization: `Bearer ${token}` },
-    })
-    return true
-  } catch (error) {
-    console.error('Failed to register for event:', error)
-    return false
-  }
-}
-
-
diff --git a/package.json b/package.json
index 7b10f70..8750a97 100644
--- a/package.json
+++ b/package.json
@@ -55,10 +55,12 @@
     "next-themes": "^0.4.6",
     "ogl": "^1.0.11",
     "pinata-web3": "^0.5.4",
+    "qrcode.react": "^4.2.0",
     "react": "^18",
     "react-day-picker": "9.8.0",
     "react-dom": "^18",
     "react-hook-form": "^7.60.0",
+    "react-qr-reader": "3.0.0-beta-1",
     "react-resizable-panels": "^2.1.7",
     "recharts": "2.15.4",
     "sonner": "^1.7.4",
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
index 3abf24a..dbab6d4 100644
--- a/pnpm-lock.yaml
+++ b/pnpm-lock.yaml
@@ -146,6 +146,9 @@ importers:
       pinata-web3:
         specifier: ^0.5.4
         version: 0.5.4
+      qrcode.react:
+        specifier: ^4.2.0
+        version: 4.2.0(react@18.3.1)
       react:
         specifier: ^18
         version: 18.3.1
@@ -158,6 +161,9 @@ importers:
       react-hook-form:
         specifier: ^7.60.0
         version: 7.62.0(react@18.3.1)
+      react-qr-reader:
+        specifier: 3.0.0-beta-1
+        version: 3.0.0-beta-1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
       react-resizable-panels:
         specifier: ^2.1.7
         version: 2.1.9(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
@@ -1163,6 +1169,18 @@ packages:
   '@webgpu/types@0.1.65':
     resolution: {integrity: sha512-cYrHab4d6wuVvDW5tdsfI6/o6vcLMDe6w2Citd1oS51Xxu2ycLCnVo4fqwujfKWijrZMInTJIKcXxteoy21nVA==}
 
+  '@zxing/browser@0.0.7':
+    resolution: {integrity: sha512-AepzMgDnD6EjxewqmXpHJsi4S3Gw9ilZJLIbTf6fWuWySEcHBodnGu3p7FWlgq1Sd5QyfPhTum5z3CBkkhMVng==}
+    peerDependencies:
+      '@zxing/library': ^0.18.3
+
+  '@zxing/library@0.18.6':
+    resolution: {integrity: sha512-bulZ9JHoLFd9W36pi+7e7DnEYNJhljYjZ1UTsKPOoLMU3qtC+REHITeCRNx40zTRJZx18W5TBRXt5pq2Uopjsw==}
+    engines: {node: '>= 10.4.0'}
+
+  '@zxing/text-encoding@0.9.0':
+    resolution: {integrity: sha512-U/4aVJ2mxI0aDNI8Uq0wEhMgY+u4CNtEb0om3+y3+niDAsoTCOB33UF0sxpzqzdqXLqmvc+vZyAt4O8pPdfkwA==}
+
   abort-error@1.0.1:
     resolution: {integrity: sha512-fxqCblJiIPdSXIUrxI0PL+eJG49QdP9SQ70qtB65MVAoMr2rASlOyAbJFOylfB467F/f+5BCLJJq58RYi7mGfg==}
 
@@ -1406,6 +1424,11 @@ packages:
       react-dom:
         optional: true
 
+  fsevents@2.3.3:
+    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
+    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
+    os: [darwin]
+
   function-bind@1.1.2:
     resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}
 
@@ -1682,6 +1705,11 @@ packages:
   proxy-from-env@1.1.0:
     resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}
 
+  qrcode.react@4.2.0:
+    resolution: {integrity: sha512-QpgqWi8rD9DsS9EP3z7BT+5lY5SFhsqGjpgW5DY/i3mK4M9DTBNz3ErMi8BWYEfI3L0d8GIbGmcdFAS1uIRGjA==}
+    peerDependencies:
+      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
+
   react-day-picker@9.8.0:
     resolution: {integrity: sha512-E0yhhg7R+pdgbl/2toTb0xBhsEAtmAx1l7qjIWYfcxOy8w4rTSVfbtBoSzVVhPwKP/5E9iL38LivzoE3AQDhCQ==}
     engines: {node: '>=18'}
@@ -1705,6 +1733,12 @@ packages:
   react-is@18.3.1:
     resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}
 
+  react-qr-reader@3.0.0-beta-1:
+    resolution: {integrity: sha512-5HeFH9x/BlziRYQYGK2AeWS9WiKYZtGGMs9DXy3bcySTX3C9UJL9EwcPnWw8vlf7JP4FcrAlr1SnZ5nsWLQGyw==}
+    peerDependencies:
+      react: ^16.8.0 || ^17.0.0
+      react-dom: ^16.8.0 || ^17.0.0
+
   react-remove-scroll-bar@2.3.8:
     resolution: {integrity: sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==}
     engines: {node: '>=10'}
@@ -1767,6 +1801,11 @@ packages:
       react: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
       react-dom: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
 
+  rollup@2.79.2:
+    resolution: {integrity: sha512-fS6iqSPZDs3dr/y7Od6y5nha8dW1YnbgtsyotCVvoFGKbERG++CVRFv1meyGDE1SNItQA8BrnCw7ScdAhRJ3XQ==}
+    engines: {node: '>=10.0.0'}
+    hasBin: true
+
   scheduler@0.23.2:
     resolution: {integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==}
 
@@ -1825,6 +1864,10 @@ packages:
   tiny-invariant@1.3.3:
     resolution: {integrity: sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==}
 
+  ts-custom-error@3.3.1:
+    resolution: {integrity: sha512-5OX1tzOjxWEgsr/YEUWSuPrQ00deKLh6D7OTWcvNHm12/7QPyRh8SYpyWvA4IZv8H/+GQWQEh/kwo95Q9OVW1A==}
+    engines: {node: '>=14.0.0'}
+
   tslib@2.8.1:
     resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}
 
@@ -2850,6 +2893,21 @@ snapshots:
 
   '@webgpu/types@0.1.65': {}
 
+  '@zxing/browser@0.0.7(@zxing/library@0.18.6)':
+    dependencies:
+      '@zxing/library': 0.18.6
+    optionalDependencies:
+      '@zxing/text-encoding': 0.9.0
+
+  '@zxing/library@0.18.6':
+    dependencies:
+      ts-custom-error: 3.3.1
+    optionalDependencies:
+      '@zxing/text-encoding': 0.9.0
+
+  '@zxing/text-encoding@0.9.0':
+    optional: true
+
   abort-error@1.0.1: {}
 
   aria-hidden@1.2.6:
@@ -3073,6 +3131,9 @@ snapshots:
       react: 18.3.1
       react-dom: 18.3.1(react@18.3.1)
 
+  fsevents@2.3.3:
+    optional: true
+
   function-bind@1.1.2: {}
 
   geist@1.5.1(next@14.2.16(react-dom@18.3.1(react@18.3.1))(react@18.3.1)):
@@ -3315,6 +3376,10 @@ snapshots:
 
   proxy-from-env@1.1.0: {}
 
+  qrcode.react@4.2.0(react@18.3.1):
+    dependencies:
+      react: 18.3.1
+
   react-day-picker@9.8.0(react@18.3.1):
     dependencies:
       '@date-fns/tz': 1.2.0
@@ -3336,6 +3401,14 @@ snapshots:
 
   react-is@18.3.1: {}
 
+  react-qr-reader@3.0.0-beta-1(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
+    dependencies:
+      '@zxing/browser': 0.0.7(@zxing/library@0.18.6)
+      '@zxing/library': 0.18.6
+      react: 18.3.1
+      react-dom: 18.3.1(react@18.3.1)
+      rollup: 2.79.2
+
   react-remove-scroll-bar@2.3.8(@types/react@18.3.24)(react@18.3.1):
     dependencies:
       react: 18.3.1
@@ -3406,6 +3479,10 @@ snapshots:
       tiny-invariant: 1.3.3
       victory-vendor: 36.9.2
 
+  rollup@2.79.2:
+    optionalDependencies:
+      fsevents: 2.3.3
+
   scheduler@0.23.2:
     dependencies:
       loose-envify: 1.4.0
@@ -3449,6 +3526,8 @@ snapshots:
 
   tiny-invariant@1.3.3: {}
 
+  ts-custom-error@3.3.1: {}
+
   tslib@2.8.1: {}
 
   tw-animate-css@1.3.3: {}
diff --git a/types/events.ts b/types/events.ts
index 4c03f6b..68bfe04 100644
--- a/types/events.ts
+++ b/types/events.ts
@@ -1,79 +1,46 @@
 // Event-related types and interfaces
 
-export interface Event {
-  id: string
-  documentId: string
-  title: string
-  description: string
-  type: 'academic' | 'cultural' | 'sports' | 'technical' | 'social' | 'workshop' | 'seminar' | 'conference'
-  category: 'internal' | 'external' | 'intercollegiate'
-  date: string
-  startTime: string
-  endTime: string
-  location: string
-  venue?: string
-  maxParticipants?: number
-  currentParticipants: number
-  registrationDeadline: string
-  isRegistrationOpen: boolean
-  requirements?: string[]
-  benefits?: string[]
-  contactPerson: string
-  contactEmail: string
-  contactPhone?: string
-  organizer: string
-  status: 'draft' | 'published' | 'ongoing' | 'completed' | 'cancelled'
-  isActive: boolean
-  attachments?: EventAttachment[]
-  createdAt: string
-  updatedAt: string
-  publishedAt?: string
-}
+import { StudentProfile } from "./student";
 
-export interface EventAttachment {
-  id: string
-  name: string
-  url: string
-  type: 'image' | 'document' | 'video' | 'other'
-  size?: number
-  createdAt: string
-}
+export interface Event {
+  id: string;
+  documentId: string;
+  Title: string;
+  Description: string;
+  Type:
+    | "Hackathon"
+    | "Cultural"
+    | "Workshops"
+    | "Coding"
+    | "Other"
+    | "workshop"
+    | "seminar"
+    | "conference";
 
-export interface EventRegistration {
-  id: string
-  eventId: string
-  studentId: string
-  studentName: string
-  studentEmail: string
-  registrationDate: string
-  status: 'registered' | 'attended' | 'absent' | 'cancelled'
-  notes?: string
-  certificateIssued?: boolean
-  feedbackProvided?: boolean
+  DateTime: string;
+  Venue?: string;
+  Registered: StudentProfile[];
+  Attendees: StudentProfile[];
+  Winners: StudentProfile[];
+  createdAt: string;
+  updatedAt: string;
+  publishedAt?: string;
 }
 
-export interface EventFeedback {
-  id: string
-  eventId: string
-  studentId: string
-  rating: number // 1-5 scale
-  feedback: string
-  suggestions?: string
-  wouldRecommend: boolean
-  submittedDate: string
+export interface CreateEventRequest {
+  Title: string;
+  Description: string;
+  Type: string;
+  DateTime: string;
+  Venue?: string;
 }
 
-export interface EventCalendar {
-  month: number
-  year: number
-  events: EventSummary[]
+export interface EventCardData {
+  id: string;
+  Title: string;
+  Type: string;
+  DateTime: string;
+  Venue?: string;
 }
 
-export interface EventSummary {
-  id: string
-  title: string
-  date: string
-  type: Event['type']
-  status: Event['status']
-  participantCount: number
-}
+export interface EventDetails extends Event {}
-- 
2.39.5 (Apple Git-154)

